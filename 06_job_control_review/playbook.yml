---
- name: 0) 작업 제어 실습
  hosts: webservers
  gather_facts: true
  vars_files:
    - vars/vars.yml
  tasks:
    ############################
    # 0) 점검 = MEM > 256, 배포판: CentOS
    # 1) 웹 패키지 설치 - httpd, mod_ssl, firewalld
    # 2) 웹 서비스 기동 - httpd, firewalld
    # 3) 웹 서버 설정 (notify)
    #   * /etc/pki/tls/certs/localhost.crt
    #   * /etc/pki/tls/private/localhost.key
    #   * /var/www/html/index.html
    # 4) 방화벽에 포트 등록 - http, https
    # 5) handlers 정의
    ############################
    - name: 0) 점검 - (ㄱ) 메모리 (ㄴ) 배포판 종류
      ansible.builtin.fail:
        msg: "에러"
      when: >
        ansible_memtotal_mb < min_ram_mb or
        ansible_distribution != "CentOS"

    - name: 0) 다른 점검 - (ㄷ) 배포판 버전 점검
      ansible.builtin.debug:
        msg: "CentOS Stream 9 버전에서만 동작합니다. "
      failed_when: ansible_distribution_version != "9"

    - name: 1) 웹 패키지 설치 - httpd, mod_ssl, firewalld
      ansible.builtin.yum:
        name: "{{ packages }}"
        state: present

    - name: 2) 웹 서비스 기동 - httpd, firewalld
      ansible.builtin.systemd:
        name: "{{ item }}"
        state: started
        enabled: true
      loop: "{{ services }}"
    - name: Block -Rescue
      block:
        - name: 3) 웹 서버 설정 (notify)
          #   * /etc/pki/tls/certs/localhost.crt
          #   * /etc/pki/tls/private/localhost.key
          #   * /var/www/html/index.html
          ansible.builtin.copy:
            src: "{{ item.src }}"
            dest: "{{ item.dest }}"
            owner: "{{ item.owner }}"
            group: "{{ item.group }}"
            mode: "{{ item.mode | string }}"
          loop: "{{ web_config_files }}"
          notify: restart web_service
      rescue:
        - name: 3) 에러메세지
          ansible.builtin.debug:
            msg: "[ FAIL ]"

    - name: 4) 방화벽에 포트 등록 - http, https
      ansible.posix.firewalld:
        service: "{{ item }}"
        permanent: true
        immediate: true
        state: enabled
      loop: "{{ firewall_services }}"

  handlers:
    - name: Restart web_service
      ansible.builtin.service:
        name: "{{ item }}"
        state: started
        enabled: true
      loop: "{{ services }}"
